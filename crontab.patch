diff -rupN old/etc/cron.d/lockout new/etc/cron.d/lockout
--- old/etc/cron.d/lockout	2010-12-31 16:32:35.000000000 +0800
+++ new/etc/cron.d/lockout	2010-12-31 16:31:00.000000000 +0800
@@ -1,5 +1,5 @@
 # lockout needs to check every minute whether it's time to unlock
-*/1 * * * *	root	/usr/bin/lockout unlock >/dev/null 2>&1
+*/1 * * * *	sh -c "/usr/bin/lockout unlock" >/dev/null 2>&1
 
 # rebooting *MUST* restore the root password
-@reboot	        root	/usr/bin/lockout unlock force >/dev/null 2>&1
+@reboot	    sh -c "/usr/bin/lockout unlock force" >/dev/null 2>&1
diff -rupN old/usr/bin/lockout new/usr/bin/lockout
--- old/usr/bin/lockout	2010-12-31 16:25:13.000000000 +0800
+++ new/usr/bin/lockout	2010-12-31 16:30:31.000000000 +0800
@@ -87,8 +87,8 @@ be unlocked.
 
 /etc/cron.d/lockout B<must> contain the following two entries:
 
-    */1 * * * *	        root	/usr/bin/lockout unlock >/dev/null 2>&1
-    @reboot	        root	/usr/bin/lockout unlock force >/dev/null 2>&1
+    */1 * * * *     sh -c "/usr/bin/lockout unlock" >/dev/null 2>&1
+    @reboot         sh -c "/usr/bin/lockout unlock force" >/dev/null 2>&1
 
 The examples that follow assume you are using L<sudo(8)> and you have a file,
 F</etc/lockout/sudoers.normal> which is the normal F</etc/sudoers> file, and
@@ -201,8 +201,8 @@ Thomer M. Gil, http://thomer.com/lockout
 #    # NB: do not remove!  removing these entries will cause lockout to fail,
 #    # which means that you may end up not knowing your root password.
 #    #
-#    */1 * * * *   root    /usr/bin/lockout unlock >/dev/null 2>&1
-#    @reboot       root    /usr/bin/lockout unlock force >/dev/null 2>&1
+#    */1 * * * *     sh -c "/usr/bin/lockout unlock" >/dev/null 2>&1
+#    @reboot         sh -c "/usr/bin/lockout unlock force" >/dev/null 2>&1
 #    ---------------------------------------------------------------------
 #    (Or whatever the correct path to lockout is.)
 #
@@ -260,8 +260,8 @@ sub lock {
   my ($unlock, $unlock_force) = (0, 0);
   while(<CRONTAB>) {
     my $valid = 0;
-    /^\s*\*\/1\s+\*\s+\*\s+\*\s+\*\s+root\s+(\S+)\s+unlock\s*.*$/ and $valid = $unlock = 1;
-    /^\s*\@reboot\s+root\s+(\S+)\s+unlock\s+force\s*.*$/ and $valid = $unlock_force = 1;
+    /^\s*\*\/1\s+\*\s+\*\s+\*\s+\*\s+sh\s+-c\s+"(\S+)\s+unlock"/ and $valid = $unlock = 1;
+    /^\s*\@reboot\s+sh\s+-c\s+"(\S+)\s+unlock\s+force"/ and $valid = $unlock_force = 1;
 
     if($valid) {
       -x $1 or print "$1 does not exist or is not executable.  run 'crontab -u root -e'\n" and exit -1;
@@ -273,8 +273,8 @@ sub lock {
     print <<EOF;
 Your $CRONTAB should contain:
 
-/1 * * * *	root	/usr/bin/lockout unlock
-\@reboot	root	/usr/bin/lockout unlock force
+*/1 * * * *     sh -c "/usr/bin/lockout unlock" >/dev/null 2>&1
+\@reboot         sh -c "/usr/bin/lockout unlock force" >/dev/null 2>&1
 EOF
     exit -1;
   }
@@ -555,8 +555,8 @@ FILES
   $UNLOCK_SCRIPT           -- script executed on unlock
   $CRONTAB              -- this file must contain:
   ----------------------------------------------------------------
-  */1 * * * *	root    /usr/bin/lockout unlock >/dev/null 2>&1
-  \@reboot       root    /usr/bin/lockout unlock force >/dev/null 2>&1
+  */1 * * * *     sh -c "/usr/bin/lockout unlock" >/dev/null 2>&1
+  \@reboot         sh -c "/usr/bin/lockout unlock force" >/dev/null 2>&1
   ----------------------------------------------------------------
   (or another, correct path to lockout)
 
